{"version":3,"sources":["components/header.js","components/redbutton.js","components/greenbutton.js","components/task.js","components/tasklist.js","components/infobar.js","components/inputfield.js","components/addnewtask.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","style","styles","header","className","class","React","Component","color","textAlign","backgroundColor","fontFamily","padding","fontSize","border","borderStyle","borderRadius","marginTop","boxShadow","textShadow","RedButton","delete","type","onClick","this","props","clickHandler","label","paddingLeft","paddingRight","GreenButton","add","Task","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onDoneClicked","bind","assertThisInitialized","onDeleteClicked","onRestoreClicked","completedTask","taskID","onCompleteTaskHandler","taskToDelete","onDeleteTaskHandler","taskToRestore","onRestoreTaskHandler","task","taskNumber","taskDescription","taskDueDate","taskCompleted","greenbutton","redbutton","taskStatus","src","height","opacity","marginBottom","fontStyle","alignItems","Tasklist","mytasks","tasks","map","i","components_task","description","dueDate","taskSortDate","key","id","done","status","myTasks","paddingBottom","InfoBar","infobar","items","length","fontWeight","InputField","onTextFieldChange","handleKeyPress","state","inputFieldValue","event","target","value","setState","inputFieldId","changeHandler","charCode","onEnterPressed","preventDefault","input","taskValue","onChange","onKeyPress","placeholder","AddNewTask","onAddClicked","onInputfieldUpdated","today","Date","setHours","compareDate","alert","taskToAdd","Math","floor","random","onAddTaskHandler","addTask","inputfield","App","activeTasks","completedTasks","deleteTask","completeTask","restoreTask","currentListOfTasks","fullDate","String","getFullYear","getMonth","getDate","push","sort","b","indexToDelete","findIndex","splice","currentCompletedTasks","newCompletedTask","filter","unshift","newTaskToRestore","addnewtask","tasklist","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.98429921.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Header extends React.Component{\r\n\r\n    render() {\r\n        return (\r\n        <div style={styles.header} className=\"row\">\r\n        <div class=\"my-task-list col-sm-12\"> <p> Task List</p></div>\r\n        </div>\r\n        )\r\n}\r\n}\r\n\r\nconst styles = {\r\n    header : {\r\n        color: 'rgba(51, 0, 25, 0.90)', // 85, 107, 47\r\n        textAlign: 'center',\r\n        backgroundColor: 'rgba(255, 230, 242, 0.7)', // 204, 0, 102  255, 230, 242\r\n        fontFamily: 'Permanent Marker',\r\n        \r\n        padding:'0.1em',\r\n        fontSize: '5em',\r\n        border: '0.05em',\r\n        borderStyle: 'solid', \r\n        borderRadius: '1em',\r\n        marginTop: '50px',\r\n        boxShadow: '10px 10px',\r\n        textShadow: '1px 1px',\r\n        \r\n        \r\n    }\r\n\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nclass RedButton extends React.Component{\r\n\r\n    render() {\r\n        return (\r\n          <button style={styles.delete} type=\"button\" onClick={this.props.clickHandler}>{this.props.label} </button>\r\n        )\r\n}\r\n}\r\n\r\nconst styles = {\r\n    delete : {\r\n       backgroundColor: 'rgb(102, 0, 51)',\r\n       color: 'rgba(240, 241, 229, 0.8)',\r\n       borderRadius: '1em',\r\n       paddingLeft: '0.5em',\r\n       paddingRight: '0.5em',\r\n       fontFamily: 'Permanent Marker',\r\n       fontSize: '0.7em'\r\n    }\r\n\r\n};\r\n\r\nexport default RedButton;","import React from 'react';\r\n\r\nclass GreenButton extends React.Component{\r\n\r\n    render() {\r\n        return (\r\n          <button style={styles.add} type=\"button\" onClick={this.props.clickHandler}>{this.props.label}</button>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    add : {\r\n       backgroundColor: 'rgb(153, 115, 0)',\r\n       color: 'rgba(240, 241, 229, 0.8)', //204, 153, 0\r\n       borderRadius: '1em',\r\n       paddingLeft: '0.5em',\r\n       paddingRight: '0.5em',\r\n       fontFamily: 'Permanent Marker',\r\n       fontSize: '0.7em',\r\n       \r\n    }\r\n\r\n};\r\n\r\nexport default GreenButton;","import React from 'react';\r\nimport RedButton from './redbutton';\r\nimport GreenButton from './greenbutton';\r\n\r\nclass Task extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onDoneClicked = this.onDoneClicked.bind(this);\r\n        this.onDeleteClicked = this.onDeleteClicked.bind(this);\r\n        this.onRestoreClicked = this.onRestoreClicked.bind(this);\r\n    }\r\n\r\n    onDoneClicked() {\r\n        const completedTask = this.props.taskID;\r\n        this.props.onCompleteTaskHandler(completedTask);\r\n    }\r\n\r\n    onDeleteClicked(){\r\n        const taskToDelete = this.props.taskID\r\n        this.props.onDeleteTaskHandler(taskToDelete);\r\n    }\r\n\r\n    onRestoreClicked(){\r\n        const taskToRestore = this.props.taskID;\r\n        this.props.onRestoreTaskHandler(taskToRestore);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div style={styles.task} className=\"row\">\r\n          <div className=\"col-sm-1\">{this.props.taskNumber}</div>\r\n          <div className=\"col-sm-4\"> {this.props.taskDescription}</div>\r\n          <div className=\"col-sm-2\">{this.props.taskDueDate}</div>\r\n          {!(this.props.taskCompleted) &&\r\n          <div className=\"col-sm-2\"> <GreenButton label={'done'} clickHandler={this.onDoneClicked} /> </div>\r\n          }\r\n          {(this.props.taskCompleted) &&\r\n          <div className=\"col-sm-2\"> <GreenButton label={'restore'} clickHandler={this.onRestoreClicked} /> </div>\r\n          }\r\n          {!(this.props.taskCompleted) &&\r\n          <div className=\"col-sm-2\"> <RedButton label={'delete'} clickHandler={this.onDeleteClicked} />  </div>\r\n          }\r\n          {(this.props.taskStatus === \"green\") && !(this.props.taskCompleted) &&\r\n          <div className=\"col-sm-1\"> <img src={'assets/greenicon.png'} height=\"30px\"/>  </div>\r\n          }\r\n          {(this.props.taskStatus === \"red\") && !(this.props.taskCompleted) &&\r\n          <div className=\"col-sm-1\"> <img src={'assets/redicon.png'} height=\"30px\"/>  </div>\r\n          }\r\n        </div>\r\n          \r\n\r\n        )\r\n}\r\n}\r\n\r\nconst styles = {\r\n    task : {\r\n        color: 'rgba(51, 0, 25, 0.94)',\r\n        textAlign: 'center',\r\n        backgroundColor: 'rgba(255, 230, 242, 0.7)',\r\n        fontFamily: 'Cursive',\r\n        padding: '0.2em',\r\n        fontSize: '1.5em',\r\n        opacity: '50%',\r\n        border: '0.07em',\r\n        borderStyle: 'solid', \r\n        borderRadius: '0.5em',\r\n        marginBottom: '20px',\r\n        fontStyle: 'italic',\r\n        alignItems: 'center',\r\n        boxShadow: '7px 7px'\r\n    }\r\n\r\n};\r\n\r\nexport default Task;","import React from 'react';\r\nimport Task from './task';\r\n\r\nclass Tasklist extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div style={styles.mytasks} className=\"container\">\r\n                {this.props.tasks.map((task, i) => \r\n                <Task \r\n                    taskDescription={task.description} \r\n                    taskDueDate={task.dueDate}\r\n                    taskSortDate=\"\"\r\n                    key={i} \r\n                    taskNumber={i+1} \r\n                    taskID={task.id} \r\n                    taskCompleted={task.done}\r\n                    onDeleteTaskHandler={this.props.onDeleteTaskHandler}\r\n                    onCompleteTaskHandler={this.props.onCompleteTaskHandler}\r\n                    onRestoreTaskHandler={this.props.onRestoreTaskHandler}\r\n                    taskStatus={task.status}\r\n                />)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    myTasks: {\r\n        paddingBottom: '5em'\r\n    }\r\n};\r\n\r\n\r\nexport default Tasklist;","import React from 'react';\r\n\r\n\r\nclass InfoBar extends React.Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={styles.infobar} class=\"container\" >\r\n                <div className=\"row\">\r\n                    \r\n                    <div className=\"col-sm-2\"> {this.props.description} </div>\r\n                    <div className=\"col-sm-1\" >{this.props.items.length}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    infobar: {\r\n        color: 'rgb(240, 193, 225)', //255, 77, 166\r\n        textAlign: 'left',\r\n        fontFamily: 'Permanent Marker',\r\n        fontSize: '1.7em',\r\n        marginTop: '20px',\r\n        marginBottom: '20px',\r\n        fontWeight: 'bold',\r\n        /*fontStyle: 'italic'*/\r\n        \r\n    }\r\n\r\n};\r\n\r\nexport default InfoBar;","import React from 'react';\r\n\r\nclass InputField extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onTextFieldChange = this.onTextFieldChange.bind(this);\r\n        this.handleKeyPress = this.handleKeyPress.bind(this);\r\n\r\n        this.state = {\r\n            inputFieldValue: \"\"\r\n        }\r\n    }\r\n\r\n    onTextFieldChange(event) {\r\n        const inputFieldValue = event.target.value;\r\n        this.setState({ inputFieldValue: inputFieldValue });\r\n\r\n        const inputFieldId = event.target.id;\r\n\r\n        this.props.changeHandler(inputFieldValue, inputFieldId);\r\n    }\r\n\r\n    handleKeyPress(target) {\r\n        if (target.charCode === 13) {\r\n            this.props.onEnterPressed();\r\n            target.preventDefault();\r\n        }\r\n\r\n\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form >\r\n                <input\r\n                    style={styles.input}\r\n                    type={this.props.type}\r\n                    value={this.props.taskValue}\r\n                    onChange={this.onTextFieldChange}\r\n                    onKeyPress={this.handleKeyPress}\r\n                    placeholder={this.props.placeholder}\r\n                    id={this.props.id}\r\n                />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    input: {\r\n        color: 'rgba(51, 0, 25, 0.94)',\r\n        textAlign: 'center',\r\n        backgroundColor: 'rgba(255, 230, 242, 0.7)',\r\n        fontFamily: 'Cursive',\r\n        fontSize: '0.6em',\r\n        border: '0.07em',\r\n        borderStyle: 'solid',\r\n        borderRadius: '0.5em',\r\n        fontStyle: 'italic',\r\n        boxShadow: '6px 6px'\r\n        \r\n    }\r\n\r\n};\r\n\r\nexport default InputField;","import React from 'react';\r\nimport InputField from './inputfield';\r\nimport GreenButton from './greenbutton';\r\n\r\n\r\nclass AddNewTask extends React.Component {\r\n\r\n    //Constructor\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            taskDescription: \"\",\r\n            dueDate: \"\"\r\n        };\r\n\r\n        //event binding functions\r\n        this.onAddClicked = this.onAddClicked.bind(this);\r\n        this.onInputfieldUpdated = this.onInputfieldUpdated.bind(this);\r\n    }\r\n\r\n    //event handling\r\n    onAddClicked() {\r\n        const taskDescription = this.state.taskDescription;\r\n        const dueDate = this.state.dueDate;\r\n\r\n        if(taskDescription && dueDate) {\r\n\r\n        const today = new Date();\r\n        today.setHours(0,0,0,0);\r\n        \r\n        const compareDate = new Date(dueDate)\r\n        compareDate.setHours(0,0,0,0)\r\n\r\n        if(today > compareDate){\r\n            alert('Please select a valid date; due date cannot be in the past')\r\n        } else {\r\n            \r\n        const taskToAdd = {\r\n            id: Math.floor((Math.random() * 100)),\r\n            description: taskDescription,\r\n            dueDate: dueDate,\r\n            done: false,\r\n            status: \"\"\r\n        };\r\n\r\n        this.props.onAddTaskHandler(taskToAdd);\r\n\r\n        this.setState({\r\n            taskDescription: \"\",\r\n            dueDate: \"\"\r\n        });\r\n    }\r\n    } else {\r\n        alert(\"Please enter task description and select due date before clicking 'add'\");\r\n    }\r\n    }\r\n\r\n\r\n    onInputfieldUpdated(inputFieldValue, inputFieldId) {\r\n        if (inputFieldId === \"taskInput\") {\r\n            this.setState({ taskDescription: inputFieldValue });\r\n        } else if (inputFieldId === \"dateInput\") {\r\n            this.setState({ dueDate: inputFieldValue });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"container\">\r\n            <div style={styles.addTask} class=\"row\">\r\n            \r\n                 <div className=\"col-sm-1\"> </div>\r\n                \r\n                 <div className=\"col-sm-2\">Task: </div>\r\n\r\n                <div className=\"col-sm-5\">\r\n                    <InputField\r\n                        taskValue={this.state.taskDescription}\r\n                        changeHandler={this.onInputfieldUpdated}\r\n                        onEnterPressed={this.onAddClicked}\r\n                        placeholder=\"enter new task\"\r\n                        type=\"text\"\r\n                        id=\"taskInput\"\r\n                    />\r\n                </div>\r\n            </div>    \r\n\r\n                <div style={styles.addTask} class=\"row\">\r\n\r\n                <div className=\"col-sm-1\"> </div>\r\n\r\n                <div className=\"col-sm-2\">Due: </div>\r\n                \r\n                <div className=\"col-sm-5\">\r\n                    <InputField\r\n                        taskValue={this.state.dueDate}\r\n                        changeHandler={this.onInputfieldUpdated}\r\n                        onEnterPressed={this.onAddClicked}\r\n                        placeholder=\"enter due date\"\r\n                        type=\"date\"\r\n                        id=\"dateInput\"\r\n                    />\r\n                </div>\r\n               \r\n                <div className=\"col-sm-2\">\r\n                    <GreenButton\r\n                        clickHandler={this.onAddClicked}\r\n                        label={'add'}\r\n\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n            </div>    \r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    addTask: {\r\n        color: 'rgb(240, 193, 225)', //\r\n        textAlign: 'left',\r\n        fontFamily: 'Permanent Marker',\r\n        fontSize: '1.7em',\r\n        marginTop: '40px',\r\n        marginBottom: '20px',\r\n        fontWeight: 'bold',\r\n        alignItems: 'center'\r\n        /*fontStyle: 'italic'*/\r\n    }\r\n};\r\n\r\nexport default AddNewTask\r\n\r\n","import React, { Component } from 'react';\nimport Header from './components/header';\nimport Tasklist from './components/tasklist';\nimport InfoBar from './components/infobar';\nimport AddNewTask from './components/addnewtask';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTasks: [],\n      completedTasks: []\n    };\n\n    this.addTask = this.addTask.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n    this.completeTask = this.completeTask.bind(this);\n    this.restoreTask = this.restoreTask.bind(this);\n  }\n\n\n\n  addTask(task) {\n    let currentListOfTasks = this.state.activeTasks;\n    \n    const today = new Date();\n    today.setHours(0,0,0,0);\n    const fullDate = new Date(task.dueDate);\n    const taskSortDate = String(fullDate.getFullYear())+String(fullDate.getMonth())+String(fullDate.getDate());\n    task.taskSortDate = taskSortDate;\n\n    if(today > fullDate) {\n      task.status = \"red\";\n    } else {\n      task.status = \"green\";\n    }\n    \n    currentListOfTasks.push(task);\n\n   currentListOfTasks.sort((a,b) => (a.taskSortDate > b.taskSortDate) ? 1 : -1);\n\n    this.setState({\n      activeTasks: currentListOfTasks\n    });\n  }\n\n\n\n  deleteTask(taskID) {\n    let currentListOfTasks = this.state.activeTasks;\n    const indexToDelete = currentListOfTasks.findIndex(i => i.id === taskID);\n\n    //alert('Task deleted: ' + currentListOfTasks[indexToDelete].description);\n\n    currentListOfTasks.splice(indexToDelete, 1);\n\n    this.setState({\n      activeTasks: currentListOfTasks\n    });\n\n\n  }\n\n\n  completeTask(taskID) {\n    let currentListOfTasks = this.state.activeTasks;\n    let currentCompletedTasks = this.state.completedTasks;\n\n    const newCompletedTask = currentListOfTasks.filter((task) => task.id === taskID)[0];\n    newCompletedTask.done = true;\n    currentCompletedTasks.unshift(newCompletedTask);\n\n\n    const indexToDelete = currentListOfTasks.findIndex(i => i.id === taskID);\n    currentListOfTasks.splice(indexToDelete, 1);\n\n    this.setState({\n      activeTasks: currentListOfTasks,\n      completedTasks: currentCompletedTasks\n    });\n\n    // alert('Task completed: ' + newCompletedTask.description);\n  }\n\n\n\n  restoreTask(taskID) {\n    let currentListOfTasks = this.state.activeTasks;\n    let currentCompletedTasks = this.state.completedTasks;\n\n    const newTaskToRestore = currentCompletedTasks.filter((task) => task.id === taskID)[0];\n    newTaskToRestore.done = false;\n    currentListOfTasks.push(newTaskToRestore);\n    currentListOfTasks.sort((a,b) => (a.taskSortDate > b.taskSortDate) ? 1 : -1);\n\n    const indexToDelete = currentCompletedTasks.findIndex(i => i.id === taskID);\n    currentCompletedTasks.splice(indexToDelete, 1);\n\n    this.setState({\n      activeTasks: currentListOfTasks,\n      completedTasks: currentCompletedTasks\n    });\n    //alert('Task restored: ' + newTaskToRestore.description)\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Header />\n        <AddNewTask onAddTaskHandler={this.addTask} />\n        <hr/>\n        <InfoBar description=\"Active Tasks\" items={this.state.activeTasks} />\n        <Tasklist tasks={this.state.activeTasks} onDeleteTaskHandler={this.deleteTask} onCompleteTaskHandler={this.completeTask} />\n        <hr/>\n        <InfoBar description=\"Completed Tasks\" items={this.state.completedTasks} />\n        <Tasklist tasks={this.state.completedTasks} onRestoreTaskHandler={this.restoreTask} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}